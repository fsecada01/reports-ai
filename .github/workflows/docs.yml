name: website

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: docs-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml', 'uv.lock') }}

      - name: Install dependencies
        run: |
          uv sync
          uv pip install .[doc]
#          uv sync --group doc

      - name: Build docs
        run: uv run python docs/make.py
        env:
          SQL_DIALECT: sqlite

      - uses: actions/configure-pages@v4

      - uses: actions/upload-pages-artifact@v3
        if: github.event_name == 'push'
        with:
          # Publish the pdoc-generated site root which contains index.html
          path: docs/api/

  deploy:
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
